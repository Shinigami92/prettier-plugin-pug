name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node_version: [20, 22]
      fail-fast: false
    timeout-minutes: 10

    name: 'Build&Test: node-${{ matrix.node_version }}, ${{ matrix.os }}'
    steps:
      - name: Set git to use LF on Windows
        if: matrix.os == 'windows-latest'
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Install pnpm
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0

      - name: Set node version to ${{ matrix.node_version }}
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: ${{ matrix.node_version }}
          cache: 'pnpm'

      - name: Versions
        run: |
          echo "pnpm: $(pnpm --version)"
          echo "npm : $(npm --version)"
          echo "node: $(node --version)"
          echo "process.versions:"
          node -p process.versions

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build

      - name: Test
        run: pnpm run test

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    name: 'Lint: node-20, ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0

      - name: Set node version to 20
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Prepare
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm run lint

      - name: Check formatting
        run: pnpm prettier --check .

  audit:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    name: 'Audit: node-20, ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0

      - name: Set node version to 20
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Prepare
        run: pnpm install --frozen-lockfile

      - name: Audit production
        run: pnpm audit --prod

      - name: Audit all
        continue-on-error: true
        run: pnpm audit

      - name: Check outdated dependencies
        continue-on-error: true
        if: github.ref == 'refs/heads/main'
        run: pnpm outdated --long
